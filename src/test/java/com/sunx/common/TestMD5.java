package com.sunx.common;

import com.sunx.common.encoding.CheckEncoding;
import com.sunx.common.encrypt.MD5;
import com.sunx.common.memory.SystemInfoBean;
import org.junit.Test;
import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

import java.io.UnsupportedEncodingException;
import java.util.Base64;

/**
 * MD5测试类
 *
 * 1 测试任意长度的数据
 * 2 测试同一个字段加密的结果是否相同
 */
public class TestMD5 {

    @Test
    public void test1() {
//        String src = "XMjI3ODcwODY5Ng==";
//        int len = 20;
//
//        String md5 = MD5.md5(src,len);
//        System.out.println(md5);
//
//        System.out.println(MD5.md5(src));

        String str = "GET:/customer/comment/list:1484827085:631l1i1x3fv5vs2dxlj5v8x81jqfs2om";
        System.out.println(MD5.md5(str,32));
    }

    private String str = "";
    @Test
    public void test2() throws Exception {
        CheckEncoding checkEncoding = new CheckEncoding();
        byte[] soruce = new BASE64Decoder().decodeBuffer(str);
        String result = new String(soruce,"GBK");
        System.out.println(result);

        String charset = checkEncoding.getEncoding(soruce);
        System.out.println(new String(soruce,charset));
    }
}
